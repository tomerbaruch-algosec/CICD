name: 'Prevasio CI/CD Container Security Test'
on:
  pull_request:
    branches:
      - 'main'
jobs:
  login-to-amazon-ecr:
    name: 'Authenticate to ECR'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    outputs:
      docker_username: ${{ steps.login-ecr.outputs.docker_username_703474237928_dkr_ecr_us_east_1_amazonaws_com }}
      docker_password: ${{ steps.login-ecr.outputs.docker_password_703474237928_dkr_ecr_us_east_1_amazonaws_com }}
  algosec-iac-connectivity-risk-analysis:
    name: 'Algosec Prevasio CI/CD Container Security'
    runs-on: ubuntu-latest
    needs: login-to-amazon-ecr
    container:
      image: docker://703474237928.dkr.ecr.us-east-1.amazonaws.com/devsecops-action-prevasio:latest
      credentials:
        username: ${{ needs.login-to-amazon-ecr.outputs.docker_username }}
        password: ${{ needs.login-to-amazon-ecr.outputs.docker_password }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Connectivity Risk Analysis
        run: iac-risk-analysis
        env:
          ALGOSEC_TENANT_ID: ${{ secrets.ALGOSEC_TENANT_ID }}
          ALGOSEC_CLIENT_ID: ${{ secrets.ALGOSEC_CLIENT_ID }}
          ALGOSEC_CLIENT_SECRET: ${{ secrets.ALGOSEC_CLIENT_SECRET }}
          ######
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_WORKSPACE: ${{ secrets.GITHUB_WORKSPACE }}
          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
          ######
          #CF_LOGIN_API: https://stage.app.algosec.com/api/algosaas/auth/v1/access-keys/login
          CF_REGION: anz
          #####
          FRAMEWORK: docker
          WORKING_DIR: .
          DOCKERFILE_NAME: Dockerfile
          MIN_LEVEL_TO_BLOCK_PR: 0
